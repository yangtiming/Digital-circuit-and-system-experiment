module lab2_three(input clk,input [9:0]a ,input rstp,input rst ,output reg [3:0]A,output reg [3:0]B,output reg [3:0]C,output reg [3:0]D);	 reg clr,qq,q; reg [7:0] num; wire key;	 reg [2:0]count; reg [3:0]k;  assign key=a[0]|a[1]|a[2]|a[3]|a[4]|a[5]|a[6]|a[7]|a[8]|a[9];always@(*)beginif (a[0]&q)begin 	k<=4'b0000;count<=count+1'b1;end if (a[1]&q)begin 	k<= 4'b0001;count<=count+1'b1;end if (a[2]&q)begin 	k<= 4'b0010;count<=count+1'b1;end if (a[3]&q)begin 	k<= 4'b0011;count<=count+1'b1;end if (a[4]&q)begin 	k<= 4'b0100;count<=count+1'b1;end if (a[5]&q)begin 	k<= 4'b0101;count<=count+1'b1;end if (a[6]&q)begin 	k<= 4'b0110;count<=count+1'b1;end if (a[7]&q)begin 	k<= 4'b0111;count<=count+1'b1;end if (a[8]&q)begin 	k<=4'b1000;count<=count+1'b1;end if (a[9]&q)begin 	k<=4'b1001;count<=count+1'b1;end 	if(rstp)	begin 						A<=4'b0000;			B<=4'b0000;			C<=4'b0000;			D<=4'b0000;		count<=3'b000;	end 		else if(count==3'b001)	begin				A<=k;		end		else if(count==3'b010)	begin							B<=A;			A<=k;							end	else if(count==3'b011)	begin			C<=B;			B<=A;			A<=k;				end	else if(count==3'b100)	begin			D<=C;			C<=B;			B<=A;			A<=k;		end	else 	begin			D<=D;			C<=C;			B<=B;			A<=A;		end	end always@(posedge key, posedge clr,posedge rst)                       begin  if (rst)     qq<=1'b0;  else if( clr==1'b1)     qq<=1'b0;  else     qq<=1'b1;endalways@(negedge qq , posedge rst,posedge clk)                      begin  if (!qq|rst)    begin       num<=8'd0;       clr<=1'b0;    q<=1'b0;    end   else    if (num==8'd99)      begin   clr<=1'b1;num<=8'd0;q<=1'b0;end      else   begin        num<=num+1'b1;  q=1'b1;end  endendmodule